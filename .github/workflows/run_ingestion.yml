name: Run Ingestion

on:
#   schedule:
#     - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to run the script'
        required: true
        default: dev
        type: choice
        options:
          - dev
          - prod
env:
  DATABASE: ${{ vars.SUPABASE_DATABASE }}
  HOST: ${{ vars.SUPABASE_HOST }}
  PASSWORD: ${{ secrets.SUPABASE_PASSWORD }}
  PORT: ${{ vars.SUPABASE_PORT }}
  SCHEMA_INGESTION: ${{ vars.SCHEMA_INGESTION }}
  SCHEMA_INGESTION_TEMP: ${{ vars.SCHEMA_INGESTION_TEMP }}
  USER: ${{ vars.SUPABASE_USER }}

jobs:
  create-ingestion-schemas:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.environment == 'prod' && 'master' || 'dev' }}

      - name: Setup environment
        uses: ./.github/actions/setup/ingestion
 
      - name: Create schemas
        run: |
          echo "Creating schemas"
          python -m ingest.create_ingestion_schemas

  fetch-ingestion-scripts:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    outputs:
      scripts_json: ${{ steps.get-scripts.outputs.scripts_json }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.environment == 'prod' && 'master' || 'dev' }}

      - name: Setup environment
        uses: ./.github/actions/setup/ingestion

      - name: Fetch script names from database
        id: get-scripts
        env:
          SCHEMA_META: ${{ vars.SCHEMA_META }}
        run: python -m ingest.fetch_ingestion_scripts

  run-ingestion-scripts:
    needs: [create-ingestion-schemas, fetch-ingestion-scripts]
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    strategy:
      matrix:
        scripts: ${{ fromJson(needs.fetch-ingestion-scripts.outputs.scripts_json) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.environment == 'prod' && 'master' || 'dev' }}

      - name: Setup environment
        uses: ./.github/actions/setup/ingestion

      - name: Remove old Chrome if it exists
        run: |
          sudo apt-get remove -y google-chrome-stable || true  # Ignore error if Chrome is not installed
      
      - name: Install Chrome
        id: setup-chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: ${{ vars.CHROME_VERSION }}
          install-chromedriver: true

      - name: Run ingestion script
        env:
          CHROMEDRIVER_PATH: ${{ steps.setup-chrome.outputs.chromedriver-path }}
        run: |
          echo "Running ingestion script: ${{ matrix.scripts.script_name }}"
          python -m ingest.${{ matrix.scripts.script_name }}